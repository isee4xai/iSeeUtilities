
/*
 * Enumerate with the types of nodes we can have
 * 
 * @author Marta Caro-Martinez
 * */


public enum NodeType {
	
	// *********** nodes that have to be there for sure
	// To connect several composite nodes - can have composite nodes and explainer nodes as children
	PriorityNode("PriorityNode"),
	// To connect several composite nodes - can have composite nodes and explainer nodes as children
	SequenceNode("SequenceNode"),
	// explanation method leave
	ExplanationMethodNode("ExplanationMethodNode"),
	
	// *********** new nodes
	// Priority node with two or more children - The children nodes offer explanations that are completely different from each other
	Replacement("Replacement"), // 
	// Sequence node with two or more children - Right sibling(s) generate explanations that clarify explanations generated by the left sibling(s) ex: alternative visualisation with more information
	Variant("Variant"),
	// Sequence node with two or more children - Right sibling(s) generate explanations that provides a different perspective to the explanations generated by the left sibling(s)
	Complement("Complement"),
	// Sequence node with two or more children - Right sibling(s) generate explanations that provide more information to the  explanations generated by the left sibling(s) ex: DiCE presenting an additional counterfactual
	Supplement("Supplement"),
	// Sequence or Priority Node with two or more children - Design user has the opportunity to set custom navigation questions, possible response and their interpretation, will work as a Sequence or Priority node. This is to allow design users with very specific navigation questions to indicate them in the BT
	Custom("Custom"),
	
	// *********** to remove?	
	EvaluationMethodNode("EvaluationMethodNode"),
	FailerNode("FailerNode"),
	SucceederNode("SucceederNode"),
	ConditionNode("ConditionNode"),
	InverterNode("InverterNode"),
	LimitAtActivationsNode("LimitAtActivationsNode"),
	RepeatAtXNode("RepeatAtXNode"),
	RepeatUntilFailureNode("RepeatUntilFailureNode"), 
	RepeatUntilSuccessNode("RepeatUntilSuccessNode");
	
	private String name;
    private NodeType(String name) {
        this.name = name;
    }
   
    @Override
    public String toString(){
        return this.name;
    }
}
